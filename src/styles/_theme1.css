/* === CUSTOM SELECTORS === */
/* ======================== */
/* We can (re)define custom selctors on the USER level if needed */
/* NOTE: this overwrites the default so do NOT forget to copy-paste then modify the defaults if needed */
/* @custom-selector :--color-palette-match [class*="color-palette-"]; */
/* @custom-selector :--color-palette-alt-contrast .theme-dark; */

/* === FONTS & TYPOGRAPHY === */
/* ========================== */
/* The Theme designer shouldn't be too attached to specific fonts */
/* Maybe just overwrite the system fonts stacks or the fallback */
:root {
  /* --font-body-fallback: var(--system-fonts-stack-serif); */
  /* --system-fonts-stack-sans-serif: roboto, helvetica neue, helvetica,
    avenir next, avenir, segoe ui, Cantarell, Ubuntu, noto, -apple-system,
    BlinkMacSystemFont, arial, sans-serif; */

  /* Something between 1.5 and 1.75? */
  --line-height-body: 1.5;
  /* Something between 1.1 and 1.3? */
  --line-height-heading: 1.1;
}

/* === LAYOUTS === */
/* =============== */
/* To use semantic classes in our HTML and optimize the CSS, we can setup custom selectors */
@custom-selector :--box body;
@custom-selector :--no-border body;
@custom-selector :--center body;
@custom-selector :--stack body;
@custom-selector :--recursive .rec;

body {
  --gap-stack: 1em;
}
ul:not(#randomId) > *,
ol:not(#randomId) > * {
  margin-block-start: 0 !important;
}

/* === COLORS === */
/* ============== */
/* --- color VARIABLES --- */
/* ---------------------- */
:root {
  /* The theme could define a set of default colors to choose from */
  --hsl-white: 0deg, 0%, 100%;
  --color-white: hsl(var(--hsl-white));
  --hsl-blue: 221deg, 55%, 41%;
  --color-blue: hsl(var(--hsl-blue));
  --color-blue-trans: hsla(var(--hsl-blue), 0.8);
  --hsl-teal: 181deg, 100%, 34%;
  --color-teal: hsl(var(--hsl-teal));
  --hsl-red: 347, 78%, 60%;
  --color-red: hsl(var(--hsl-red));
  --hsl-orange: 19deg, 100%, 64%;
  --color-orange: hsl(var(--hsl-orange));
  --hsl-purple: 273deg, 40%, 49%;
  --color-purple: hsl(var(--hsl-purple));
  --hsl-green: 111deg, 48%, 54%;
  --color-green: hsl(var(--hsl-green));
  --color-black: hsl(0, 0%, 7%);
  --color-dark: hsl(0, 0%, 20%);
  --color-grey: hsl(0, 0%, 53%);
}
/* --- color PALETTES --- */
/* ---------------------- */
/* The theme designer should provide a set of palettes to choose from */
/* since color variables can be overwriten by user, it makes it super easy to adapt a palette to user's brand */
:root,
body,
.cp-classic {
  /* The theme could define a default color palette from the default colors */
  --color-front: var(--color-blue); /* prettier-ignore */
  --color-front-alt: var(--color-blue); /* prettier-ignore */
  --color-front-accent: var(--color-teal); /* prettier-ignore */
  --color-front-muted: var(--color-blue-trans); /* prettier-ignore */
  --color-front-success: var(--color-green); /* prettier-ignore */
  --color-front-warning: var(--color-orange); /* prettier-ignore */
  --color-front-error: var(--color-red); /* prettier-ignore */
  --color-back: var(--color-white); /* prettier-ignore */
  --color-back-alt: var(--color-white); /* prettier-ignore */
  --color-back-accent: var(--color-white); /* prettier-ignore */
  --color-back-muted: var(--color-white); /* prettier-ignore */
  --color-back-success: var(--color-green); /* prettier-ignore */
  --color-back-warning: var(--color-orange); /* prettier-ignore */
  --color-back-error: var(--color-red); /* prettier-ignore */
}

/* --- color palette ALTernate assignments --- */
/* ------------------------------------------- */
/* ? The theme designer could create alt assignments...? */
.cp-alt-funky {
  /* We only need to redefine the changes from the default assignment */
  --color-front-theme: var(--color-front-accent); /* prettier-ignore */
  --color-front-accent-theme: var(--color-front); /* prettier-ignore */
  --color-back-theme: var(--color-back-accent); /* prettier-ignore */
  --color-back-accent-theme: var(--color-back); /* prettier-ignore */
}
/* --- Color palettes EXCEPTIONS --- */
/* --------------------------------- */
/* we can manage exceptions on a palette or alt basis if necessary */
/* :--button[data-c-p~="contrast"], */
button[class*="cp-"][class*="-contrast"],
button.cp-alt {
  --color-text__button--hover: var(--color-bg);
  --color-bg__button--hover: var(--color-text);
  --color-border__button: var(--color-bg);
  --color-outline: var(--color-bg);
}

/* If you use unexpected names for palette colors AND you use alts, you need to specify them here */
/* :root {
  --color-special-name-theme: var(--color-special-name);
} */

/* === SIZES & SPACES === */
/* ====================== */
/* Theme designer should only use --s-hx variables in their theme */
:root {
  /* ... */
  /* --s-1: clamp(0.852rem, 0.294vw + 0.797rem, 1.032rem); */
  /* --s0: clamp(1rem, 0.51vw + 0.904rem, 1.313rem); */
  /* --s1: clamp(1.174rem, 0.809vw + 1.022rem, 1.669rem); */
  /* ... */
  /* OR directly OR indirectly */
  /* ... */
  /* --s-h4: var(--s1, 1.2rem); */
  /* --s-p: var(--s0, 1rem); */
  /* --s-h5: var(--s0, 1rem); */
  /* ... */
}
